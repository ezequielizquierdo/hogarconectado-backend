const mongoose = require('mongoose');
const Producto = require('../models/Producto');

async function optimizarIndices() {
  try {
    await mongoose.connect('mongodb://localhost:27017/hogarconectado');
    console.log('=== OPTIMIZANDO √çNDICES PARA PAGINACI√ìN ===\n');
    
    // Crear √≠ndice compuesto para optimizar paginaci√≥n
    console.log('üîß Creando √≠ndices optimizados...');
    
    // √çndice para paginaci√≥n b√°sica (activo + createdAt)
    await Producto.collection.createIndex(
      { activo: 1, createdAt: -1 },
      { name: 'paginacion_basica' }
    );
    console.log('‚úÖ √çndice creado: activo + createdAt (paginaci√≥n b√°sica)');
    
    // √çndice para filtros por categor√≠a + paginaci√≥n
    await Producto.collection.createIndex(
      { activo: 1, categoria: 1, createdAt: -1 },
      { name: 'paginacion_categoria' }
    );
    console.log('‚úÖ √çndice creado: activo + categoria + createdAt');
    
    // √çndice para filtros por marca + paginaci√≥n
    await Producto.collection.createIndex(
      { activo: 1, marca: 1, createdAt: -1 },
      { name: 'paginacion_marca' }
    );
    console.log('‚úÖ √çndice creado: activo + marca + createdAt');
    
    // √çndice para ordenamiento por precio
    await Producto.collection.createIndex(
      { activo: 1, precioBase: 1 },
      { name: 'ordenamiento_precio' }
    );
    console.log('‚úÖ √çndice creado: activo + precioBase (ordenamiento)');
    
    // Verificar todos los √≠ndices
    console.log('\nüìä √çNDICES ACTUALES:');
    const indices = await Producto.collection.indexes();
    indices.forEach(index => {
      const keys = Object.keys(index.key).map(key => 
        `${key}:${index.key[key]}`
      ).join(', ');
      console.log(`   ${index.name || 'unnamed'}: ${keys}`);
    });
    
    console.log('\n‚ö° OPTIMIZACIONES APLICADAS:');
    console.log('‚úÖ Paginaci√≥n b√°sica optimizada');
    console.log('‚úÖ Filtros por categor√≠a optimizados');
    console.log('‚úÖ Filtros por marca optimizados');
    console.log('‚úÖ Ordenamiento por precio optimizado');
    console.log('‚úÖ B√∫squeda de texto ya optimizada (√≠ndice existente)');
    
    console.log('\nüöÄ RENDIMIENTO MEJORADO PARA:');
    console.log('‚Ä¢ GET /api/productos?pagina=X&limite=Y');
    console.log('‚Ä¢ GET /api/productos?categoria=ID&pagina=X');
    console.log('‚Ä¢ GET /api/productos?marca=MARCA&pagina=X');
    console.log('‚Ä¢ GET /api/productos?ordenar=precio-asc&pagina=X');
    console.log('‚Ä¢ GET /api/productos?buscar=TEXTO&pagina=X');
    
  } catch (error) {
    console.error('‚ùå Error optimizando √≠ndices:', error);
  } finally {
    mongoose.disconnect();
  }
}

optimizarIndices();
